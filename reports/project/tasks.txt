
------------------------------------------------------------
All tasks runnable from root project - A tutorial covering basic Gradle usage and OO-development in Groovy
------------------------------------------------------------

Default tasks: run

Application tasks
-----------------
distShadowTar - Bundles the project as a JVM application with libs and OS specific scripts.
distShadowZip - Bundles the project as a JVM application with libs and OS specific scripts.
installApp - Installs the project as a JVM application along with libs and OS specific scripts.
installShadowApp - Installs the project as a JVM application along with libs and OS specific scripts.
run - Runs this project as a JVM application
runShadow - Runs this project as a JVM application using the shadow jar
startShadowScripts - Creates OS specific scripts to run the project as a JVM application using the shadow jar

Build tasks
-----------
assemble - Assembles the outputs of this project.
build - Assembles and tests this project.
buildDependents - Assembles and tests this project and all projects that depend on it.
buildNeeded - Assembles and tests this project and all projects it depends on.
classes - Assembles classes 'main'.
clean - Deletes the build directory.
jar - Assembles a jar archive containing the main classes.
testClasses - Assembles classes 'test'.

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Distribution tasks
------------------
assembleDist - Assembles the main distributions
distTar - Bundles the project as a distribution.
distZip - Bundles the project as a distribution.
installDist - Installs the project as a distribution as-is.

Documentation tasks
-------------------
asciidoctor - Converts AsciiDoc files and copies the output files and related resources to the build directory.
groovydoc - Generates Groovydoc API documentation for the main source code.
javadoc - Generates Javadoc API documentation for the main source code.

Help tasks
----------
components - Displays the components produced by root project 'shapes-demo'. [incubating]
dependencies - Displays all dependencies declared in root project 'shapes-demo'.
dependencyInsight - Displays the insight into a specific dependency in root project 'shapes-demo'.
help - Displays a help message.
model - Displays the configuration model of root project 'shapes-demo'. [incubating]
projects - Displays the sub-projects of root project 'shapes-demo'.
properties - Displays the properties of root project 'shapes-demo'.
tasks - Displays the tasks runnable from root project 'shapes-demo'.

IDE tasks
---------
cleanEclipse - Cleans all Eclipse files.
cleanIdea - Cleans IDEA project files (IML, IPR)
eclipse - Generates all Eclipse files.
idea - Generates IDEA project files (IML, IPR, IWS)

Publishing tasks
----------------
collateForPublication - Collates all of the resources that will be used in the web-site for the tutorial
publishGhPages - Publishes all gh-pages changes to Github

Reporting tasks
---------------
buildDashboard - Generates a dashboard of all the reports produced by this build.
projectReport - Generates a report about your project.

Shadow tasks
------------
knows - Do you know who knows?
shadowJar - Create a combined JAR of project and runtime dependencies

Verification tasks
------------------
check - Runs all checks.
test - Runs the unit tests.

Other tasks
-----------
cleanIdeaWorkspace

Rules
-----
Pattern: clean<TaskName>: Cleans the output files of a task.
Pattern: build<ConfigurationName>: Assembles the artifacts of a configuration.
Pattern: upload<ConfigurationName>: Assembles and uploads the artifacts belonging to a configuration.

To see all tasks and more detail, run gradlew tasks --all

To see more detail about a task, run gradlew help --task <task>
